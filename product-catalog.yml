openapi: 3.0.3
info:
  title: Product Catalog API
  description: API for managing products, categories, and inventory
  version: 1.0.0
paths:
  /api/products:
    get:
      summary: List products
      operationId: listProducts
      parameters:
        - name: category
          in: query
          schema:
            type: string
        - name: search
          in: query
          schema:
            type: string
        - name: minPrice
          in: query
          schema:
            type: number
        - name: maxPrice
          in: query
          schema:
            type: number
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
        - name: sort
          in: query
          schema:
            type: string
            enum: [newest, price_asc, price_desc, rating]
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
  
  /api/products/{id}:
    get:
      summary: Get product details
      operationId: getProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Product not found

  /api/categories:
    get:
      summary: List all categories
      operationId: listCategories
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
    
  /api/categories/tree:
    get:
      summary: Get full category hierarchy
      operationId: getCategoryTree
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CategoryTree'

  /api/search:
    get:
      summary: Search products
      operationId: searchProducts
      parameters:
        - name: q
          in: query
          required: true
          schema:
            type: string
        - name: filters
          in: query
          schema:
            type: object
            additionalProperties: true
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/ProductSummary'
                  filters:
                    type: object
                    additionalProperties:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          count:
                            type: integer
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /api/inventory/{productId}:
    get:
      summary: Get inventory for a product
      operationId: getInventory
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Inventory'

components:
  schemas:
    ProductSummary:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        price:
          $ref: '#/components/schemas/Money'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        rating:
          type: number
          format: float
        reviewCount:
          type: integer
        available:
          type: boolean
        categoryPath:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string

    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        sku:
          type: string
        brand:
          type: string
        price:
          $ref: '#/components/schemas/Money'
        categories:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [active, inactive]
        variants:
          type: array
          items:
            $ref: '#/components/schemas/ProductVariant'
        images:
          type: array
          items:
            $ref: '#/components/schemas/ProductImage'
        specifications:
          type: array
          items:
            $ref: '#/components/schemas/ProductSpecification'
        rating:
          type: number
          format: float
        reviewCount:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    ProductVariant:
      type: object
      properties:
        id:
          type: string
        attributes:
          type: object
          additionalProperties:
            type: string
        sku:
          type: string
        price:
          $ref: '#/components/schemas/Money'

    ProductImage:
      type: object
      properties:
        id:
          type: string
        url:
          type: string
        isPrimary:
          type: boolean

    ProductSpecification:
      type: object
      properties:
        name:
          type: string
        value:
          type: string

    Category:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        parentId:
          type: string
          nullable: true

    CategoryTree:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        children:
          type: array
          items:
            $ref: '#/components/schemas/CategoryTree'

    Money:
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD

    Inventory:
      type: object
      properties:
        productId:
          type: string
        available:
          type: integer
        reserved:
          type: integer
        status:
          type: string
          enum: [in_stock, low_stock, out_of_stock]
        lastUpdated:
          type: string
          format: date-time

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        pageSize:
          type: integer