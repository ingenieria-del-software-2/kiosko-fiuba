openapi: 3.0.3
info:
  title: Payment Hub API
  description: API for managing orders and payments
  version: 1.0.0
paths:
  /api/orders:
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateOrderRequest'
      responses:
        '201':
          description: Order created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
    
    get:
      summary: List orders
      operationId: listOrders
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
        - name: status
          in: query
          schema:
            type: string
            enum: [pending, confirmed, processing, shipped, delivered, cancelled]
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/OrderSummary'
                  pagination:
                    $ref: '#/components/schemas/Pagination'

  /api/orders/{orderId}:
    get:
      summary: Get order details
      operationId: getOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'
        '404':
          description: Order not found

  /api/orders/{orderId}/cancel:
    post:
      summary: Cancel an order
      operationId: cancelOrder
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reason:
                  type: string
      responses:
        '200':
          description: Order cancelled
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Order'

  /api/payments:
    post:
      summary: Process payment
      operationId: processPayment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProcessPaymentRequest'
      responses:
        '200':
          description: Payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '400':
          description: Payment failed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentError'

  /api/payments/{paymentId}:
    get:
      summary: Get payment details
      operationId: getPayment
      parameters:
        - name: paymentId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Payment'
        '404':
          description: Payment not found

  /api/payment-methods:
    get:
      summary: List saved payment methods
      operationId: listPaymentMethods
      parameters:
        - name: userId
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PaymentMethod'
    
    post:
      summary: Add payment method
      operationId: addPaymentMethod
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPaymentMethodRequest'
      responses:
        '201':
          description: Payment method added
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaymentMethod'

  /api/payment-methods/{paymentMethodId}:
    delete:
      summary: Remove payment method
      operationId: removePaymentMethod
      parameters:
        - name: paymentMethodId
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Payment method removed

components:
  schemas:
    CreateOrderRequest:
      type: object
      required:
        - checkoutId
        - userId
      properties:
        checkoutId:
          type: string
        userId:
          type: string

    Order:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/OrderItem'
        subtotal:
          $ref: '#/components/schemas/Money'
        shippingCost:
          $ref: '#/components/schemas/Money'
        totalAmount:
          $ref: '#/components/schemas/Money'
        status:
          type: string
          enum: [pending, confirmed, processing, shipped, delivered, cancelled]
        shippingInformation:
          $ref: '#/components/schemas/ShippingInformation'
        shippingMethod:
          $ref: '#/components/schemas/ShippingMethod'
        paymentId:
          type: string
          nullable: true
        paymentStatus:
          type: string
          enum: [pending, authorized, captured, failed, refunded]
        trackingNumber:
          type: string
          nullable: true
        estimatedDelivery:
          type: string
          format: date
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    OrderSummary:
      type: object
      properties:
        id:
          type: string
        orderNumber:
          type: string
        totalAmount:
          $ref: '#/components/schemas/Money'
        status:
          type: string
          enum: [pending, confirmed, processing, shipped, delivered, cancelled]
        itemCount:
          type: integer
        paymentStatus:
          type: string
          enum: [pending, authorized, captured, failed, refunded]
        createdAt:
          type: string
          format: date-time

    OrderItem:
      type: object
      properties:
        id:
          type: string
        productId:
          type: string
        productName:
          type: string
        variantId:
          type: string
          nullable: true
        variantAttributes:
          type: object
          additionalProperties:
            type: string
        quantity:
          type: integer
        unitPrice:
          $ref: '#/components/schemas/Money'
        totalPrice:
          $ref: '#/components/schemas/Money'
        imageUrl:
          type: string

    ProcessPaymentRequest:
      type: object
      required:
        - orderId
        - amount
      properties:
        orderId:
          type: string
        amount:
          $ref: '#/components/schemas/Money'
        paymentMethodId:
          type: string
          nullable: true
        paymentDetails:
          $ref: '#/components/schemas/PaymentDetails'
          nullable: true

    Payment:
      type: object
      properties:
        id:
          type: string
        orderId:
          type: string
        amount:
          $ref: '#/components/schemas/Money'
        status:
          type: string
          enum: [pending, authorized, captured, failed, refunded]
        paymentMethod:
          type: string
        paymentMethodId:
          type: string
          nullable: true
        transactionId:
          type: string
          nullable: true
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time

    PaymentError:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

    PaymentMethod:
      type: object
      properties:
        id:
          type: string
        userId:
          type: string
        type:
          type: string
          enum: [credit_card, debit_card, mercado_credit, bank_account]
        lastFourDigits:
          type: string
          nullable: true
        cardBrand:
          type: string
          nullable: true
        holderName:
          type: string
          nullable: true
        expirationMonth:
          type: integer
          nullable: true
        expirationYear:
          type: integer
          nullable: true
        isDefault:
          type: boolean
        createdAt:
          type: string
          format: date-time

    AddPaymentMethodRequest:
      type: object
      required:
        - userId
        - type
      properties:
        userId:
          type: string
        type:
          type: string
          enum: [credit_card, debit_card, mercado_credit, bank_account]
        creditCardToken:
          type: string
          nullable: true
        lastFourDigits:
          type: string
          nullable: true
        cardBrand:
          type: string
          nullable: true
        holderName:
          type: string
          nullable: true
        expirationMonth:
          type: integer
          nullable: true
        expirationYear:
          type: integer
          nullable: true
        isDefault:
          type: boolean
          default: false

    PaymentDetails:
      type: object
      properties:
        cardNumber:
          type: string
        cardHolder:
          type: string
        expirationMonth:
          type: integer
        expirationYear:
          type: integer
        cvv:
          type: string
        savePaymentMethod:
          type: boolean
          default: false

    ShippingInformation:
      type: object
      properties:
        fullName:
          type: string
        street:
          type: string
        apartment:
          type: string
        city:
          type: string
        state:
          type: string
        postalCode:
          type: string
        country:
          type: string
        phoneNumber:
          type: string

    ShippingMethod:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          $ref: '#/components/schemas/Money'
        estimatedDeliveryDays:
          type: integer
        carrier:
          type: string

    Money:
      type: object
      properties:
        amount:
          type: number
          format: float
        currency:
          type: string
          default: USD

    Pagination:
      type: object
      properties:
        currentPage:
          type: integer
        totalPages:
          type: integer
        totalItems:
          type: integer
        pageSize:
          type: integer